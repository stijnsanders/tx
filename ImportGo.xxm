[[@MSXML,txDefs,txSession,DataLank,txImport,Variants,]][[!var
im:TtxImport;
xl,xl2:IXMLDOMNodeList;
x,y,x1:IXMLDOMElement;
q,{id1,}id2,pid1,pid2,tid,rid,retryCount,icon,i{,j}:integer;
pfound,dd:boolean;
name:WideString;
s:string;
qr:TQueryResult;
xx:array of OleVariant;

procedure dset(i:integer;v1,v2:OleVariant);
begin
  xx[i]:=v2;
  dd:=dd or (v1<>v2);
end;

]][[

Context.Include('dHead.xxmi',['Import']);

<<p>>

if Session.Data=nil then raise Exception.Create('No import job to execute')
  else im:=Session.Data as TtxImport;

//TODO: map uid's

Context.BufferSize:=0;
Session.DbCon.BeginTrans;
try

//import types first

for q:=1 to 3 do
 begin
  <<b>[[=QDesc[q]]]...</b><br />>
  repeat
    retryCount:=0;
    xl:=im.Doc.documentElement.selectNodes(string(QName[q]));
    x:=xl.nextNode as IXMLDOMElement;
    while x<>nil do
     begin

      if VarToStr(x.getAttribute('newid'))='' then
       begin
        //id1:=x.getAttribute('id');
        id2:=DefAttr(x,'propo',0);

        if id2=0 then
         begin
          //import to new item
          pid1:=DefAttr(x,'pid',0);
          pid2:=0;//counter warning
          pfound:=true;//true in most cases
          if pid1=0 then pid2:=DefAttr(im.Doc.documentElement,'graft'+string(QName[q]),0) else
           begin
            //see if in-import parent item is done yet
            y:=im.Doc.documentElement.selectSingleNode(string(QName[q])+'[@id="'+IntToStr(pid1)+'"]') as IXMLDOMElement;
            if y=nil then pid2:=DefAttr(im.Doc.documentElement,'graft'+string(QName[q]),0) else
             begin
              s:=VarToStr(y.getAttribute('newid'));
              if s='' then pfound:=false else pid2:=StrToInt(s);
             end;
           end;
          if pfound then
           begin
            //create new item
            icon:=DefAttr(x,'icon',-1);
            name:=x.selectSingleNode('name').text;
            id2:=Session.DbCon.Insert(QName[q],['pid',pid2,'icon',icon,'name',name,'system',x.selectSingleNode('system').text,'weight',DefAttr(x,'weight',0)],'id');
            y:=x.selectSingleNode('cre') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
            y:=x.selectSingleNode('mod') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);
            x.setAttribute('newid',id2);
            ]]
             <!--insert [[=id2]]--> [[#txImg(icon)]] [[=name]]
            [[
           end
          else
            inc(retryCount);//skip now, pick up in retry later (when parent may be created)
         end
        else
         begin
          //update
          icon:=DefAttr(x,'icon',-1);
          name:=x.selectSingleNode('name').text;
          dd:=false;
          SetLength(xx,5);
          qr:=TQueryResult.Create(Session.DbCon,'SELECT icon, name, system, weight FROM '+QName[q]+' WHERE id=?',[id2]);//, dft
          try
            dset(0,qr['icon'],icon);
            dset(1,qr['name'],name);
            dset(2,qr['system'],x.selectSingleNode('system').text);
            //dft?
            dset(3,qr['weight'],DefAttr(x,'weight',0));
            xx[4]:=id2;
          finally
            qr.Free;
          end;
          if dd then
           begin
            Session.DbCon.Execute('UPDATE '+QName[q]+' SET icon=?,name=?,system=?,weight=? WHERE id=?',xx);
            {
            y:=x.selectSingleNode('cre') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
            }
            y:=x.selectSingleNode('mod') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);

            x.setAttribute('newid',id2);
           end;
          ]]
           <!--update [[=id2]]--> [[#txImg(icon)]] [[=name]]
          [[
         end;
       end;
      //else already done
      x:=xl.nextNode as IXMLDOMElement;
     end;
  until retryCount=0;
  <<br />>
 end;

  //import objects
  q:=0;
  <<b>[[=QDesc[q]]]...</b><br />>
  repeat
    retryCount:=0;
    xl:=im.Doc.documentElement.selectNodes(string(QName[q]));
    x:=xl.nextNode as IXMLDOMElement;
    while x<>nil do
     begin
      if VarToStr(x.getAttribute('newid'))='' then
       begin
        //id1:=x.getAttribute('id');
        id2:=DefAttr(x,'propo',0);
        if id2=0 then
         begin
          //import to new item
          pid1:=DefAttr(x,'pid',0);
          pid2:=0;//counter warning
          pfound:=true;//true in most cases
          if pid1=0 then pid2:=DefAttr(im.Doc.documentElement,'graft'+string(QName[q]),0) else
           begin
            //see if in-import parent item is done yet
            y:=im.Doc.documentElement.selectSingleNode(string(QName[q])+'[@id="'+IntToStr(pid1)+'"]') as IXMLDOMElement;
            if y=nil then pid2:=DefAttr(im.Doc.documentElement,'graft'+string(QName[q]),0) else
             begin
              s:=VarToStr(y.getAttribute('newid'));
              if s='' then pfound:=false else pid2:=StrToInt(s);
             end;
           end;
          if pfound then
           begin
            //create new item
            name:=x.selectSingleNode('name').text;
            y:=im.Doc.documentElement.selectSingleNode('ObjType[@id="'+x.getAttribute('type')+'"]') as IXMLDOMElement;
            //assert y<>nil since imported above
            tid:=DefAttr(y,'newid',0);
            //assert tid<>0
            icon:=DefAttr(y,'icon',-1);
            id2:=Session.DbCon.Insert(QName[q],['pid',pid2,'objtype_id',tid,'name',name,sqlDesc,x.selectSingleNode('desc').text,'url',x.selectSingleNode('url').text,'weight',DefAttr(x,'weight',0),'rlm_id',DefaultRlmID],'id');//TODO: realm
            y:=x.selectSingleNode('cre') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
            y:=x.selectSingleNode('mod') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);
            x.setAttribute('newid',id2);
            ]]
             <!--[[=id2]]--> [[#txImg(icon)]] [[=name]]
            [[
           end
          else
            inc(retryCount);//skip now, pick up in retry later (when parent may be created)
         end
        else
         begin
          //update
          name:=x.selectSingleNode('name').text;
          y:=im.Doc.documentElement.selectSingleNode('ObjType[@id="'+x.getAttribute('type')+'"]') as IXMLDOMElement;
          //assert y<>nil since imported above
          tid:=DefAttr(y,'newid',0);
          //assert tid<>0
          icon:=DefAttr(y,'icon',-1);
          dd:=false;
          SetLength(xx,6);
          qr:=TQueryResult.Create(Session.DbCon,'SELECT objtype_id,name,'+sqlDesc+',url,weight FROM Obj WHERE id=?',[id2]);
          try
            dset(0,qr['objtype_id'],tid);
            dset(1,qr['name'],name);
            dset(2,qr['desc'],x.selectSingleNode('desc').text);
            dset(3,qr['url'],x.selectSingleNode('url').text);
            dset(4,qr['weight'],DefAttr(x,'weight',0));
            //dset('rlm_id',
            xx[5]:=id2;
          finally
            qr.Free;
          end;
          if dd then
           begin
            Session.DbCon.Execute('UPDATE Obj SET objtype_id=?,name=?,'+sqlDesc+'=?,url=?,weight=? WHERE id=?',xx);
            {
            y:=x.selectSingleNode('cre') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
            }
            y:=x.selectSingleNode('mod') as IXMLDOMElement;
            if y<>nil then
              Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);
            x.setAttribute('newid',id2);
           end;
          ]]
           <!--update [[=id2]]--> [[#txImg(icon)]] [[=name]]
          [[
         end;
       end;
      //else already done
      x:=xl.nextNode as IXMLDOMElement;
     end;
  until retryCount=0;
  <<br />>

  //tokens
  <<b>Tokens...</b><br />>
  xl:=im.Doc.documentElement.selectNodes(string(QName[q]));
  x1:=xl.nextNode as IXMLDOMElement;
  while x1<>nil do
   begin
    //id1:=x1.getAttribute('id');
    id2:=x1.getAttribute('newid');
    xl2:=x1.selectNodes('Tok');
    x:=xl2.nextNode as IXMLDOMElement;
    while x<>nil do
     begin
      y:=im.Doc.documentElement.selectSingleNode('TokType[@id="'+x.getAttribute('type')+'"]') as IXMLDOMElement;
      //assert y<>nil since imported above
      tid:=DefAttr(y,'newid',0);
      Session.DbCon.Insert('Tok',['obj_id',id2,'toktype_id',tid,sqlDesc,x.selectSingleNode('desc').text,'weight',DefAttr(x,'weight',0)]);
      y:=x.selectSingleNode('cre') as IXMLDOMElement;
      if y<>nil then
        Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
      y:=x.selectSingleNode('mod') as IXMLDOMElement;
      if y<>nil then
        Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);
      x:=xl2.nextNode as IXMLDOMElement;
     end;
    x1:=xl.nextNode as IXMLDOMElement;
   end;
  <<br />>

  //references
  <<b>References...</b><br />>
  xl:=im.Doc.documentElement.selectNodes(string(QName[q]));
  x1:=xl.nextNode as IXMLDOMElement;
  while x1<>nil do
   begin
    //id1:=x1.getAttribute('id');
    id2:=x1.getAttribute('newid');
    xl2:=x1.selectNodes('Ref');
    x:=xl2.nextNode as IXMLDOMElement;
    while x<>nil do
     begin
      y:=im.Doc.documentElement.selectSingleNode('RefType[@id="'+x.getAttribute('type')+'"]') as IXMLDOMElement;
      //assert y<>nil since imported above
      tid:=DefAttr(y,'newid',0);
      y:=im.Doc.documentElement.selectSingleNode('Obj[@id="'+x.getAttribute('rid')+'"]') as IXMLDOMElement;
      rid:=DefAttr(y,'newid',0);
      Session.DbCon.Insert('Ref',['reftype_id',tid,'obj1_id',id2,'obj2_id',rid,sqlDesc,x.selectSingleNode('desc').text,'weight',DefAttr(x,'weight',0)]);
      y:=x.selectSingleNode('cre') as IXMLDOMElement;
      if y<>nil then
        Session.DbCon.Update(QName[q],['id',id2,'c_uid',DefAttr(y,'uid',Session.UserID),'c_ts',VarFromDateTime(XmlToDate(y.text))]);
      y:=x.selectSingleNode('mod') as IXMLDOMElement;
      if y<>nil then
        Session.DbCon.Update(QName[q],['id',id2,'m_uid',DefAttr(y,'uid',Session.UserID),'m_ts',VarFromDateTime(XmlToDate(y.text))]);
      x:=xl2.nextNode as IXMLDOMElement;
     end;

    x1:=xl.nextNode as IXMLDOMElement;
   end;
  <<br />>

  //reports
  <<b>Reports...</b><br />>
  xl:=im.Doc.documentElement.selectNodes(string(QName[q]));
  x1:=xl.nextNode as IXMLDOMElement;
  while x1<>nil do
   begin
    //id1:=x1.getAttribute('id');
    id2:=x1.getAttribute('newid');

    xl2:=x1.selectNodes('Rpt');
    x:=xl2.nextNode as IXMLDOMElement;
    while x<>nil do
     begin
      SetLength(xx,8);
      xx[0]:=id2;
      xx[1]:=x.selectSingleNode('desc').text;
      y:=im.Doc.documentElement.selectSingleNode('TokType[@id="'+x.getAttribute('toktype')+'"]') as IXMLDOMElement;
      xx[2]:=DefAttr(y,'newid',0);
      y:=im.Doc.documentElement.selectSingleNode('RefType[@id="'+x.getAttribute('reftype')+'"]') as IXMLDOMElement;
      xx[3]:=DefAttr(y,'newid',0);
      y:=im.Doc.documentElement.selectSingleNode('Obj[@id="'+x.getAttribute('info')+'"]') as IXMLDOMElement;
      xx[4]:=DefAttr(y,'newid',0);
      xx[5]:=DefAttr(x,'weight',0);
      xx[6]:=VarFromDateTime(XmlToDate(x.selectSingleNode('ts').text));
      xx[7]:=DefAttr(x,'uid',Session.UserID);;
      Session.DbCon.Execute('INSERT INTO Rpt (obj_id,'+sqlDesc+',toktype_id,reftype_id,obj2_id,weight,ts,uid) VALUES (?,?,?,?,?,?,?,?)',xx);
      x:=xl2.nextNode as IXMLDOMElement;
     end;
    x1:=xl.nextNode as IXMLDOMElement;
   end;
  <<br />>

  if Use_ObjPath then
   begin
    //TODO: re-do only for freshly imported...
    <<b>Rebuild ObjPath</b><br />>
    Session.DbCon.Execute('DELETE FROM ObjPath',[]);

    Session.DbCon.Execute('INSERT INTO ObjPath (pid,oid,lvl) SELECT id,id,0 FROM Obj',[]);
    i:=Session.DbCon.Execute('INSERT INTO ObjPath (pid,oid,lvl) SELECT pid,id,1 FROM Obj WHERE pid<>0',[]);
    //j:=0;
    while i<>0 do
     begin
      i:=Session.DbCon.Execute('INSERT INTO ObjPath (pid,oid,lvl) SELECT ObjPath.pid,Obj.id,ObjPath.lvl+1 FROM ObjPath '+
        'INNER JOIN Obj ON Obj.pid=ObjPath.oid WHERE ObjPath.lvl=(SELECT MAX(lvl) FROM ObjPath)',[]);
      //inc(j);
      //Context.SendHTML('level '+IntToStr(j)+': '+IntToStr(i)+#13#10);
     end;
   end;

  <</p>>
  <<p>Committing...</p>>
  Session.DbCon.CommitTrans;
  <<p>Done. (<a href="Import.xxm?x=101">Continue</a> closing import job, or <a href="Import.xxm">inspect</a> import job.)</p>>
except
  Session.DbCon.RollbackTrans;
  raise;
end;


Context.Include('dFoot.xxmi');
]]
