[[@txDefs,txSession,Variants,DataLank]][[!var
i,id,jrt_id,g,m:integer;
qr:TQueryResult;
d:TDateTime;
gf:double;
]][[

CheckCallProtect(Context);
//assert Use_Journals
Session.CheckJournalPermissions;
id:=Context['id'].AsInteger;
i:=0;
while (i<Length(Session.Journals)) and (id<>Session.Journals[i].jrl_id) do inc(i);
if i=Length(Session.Journals) then
  Context.SendHTML('&mdash;')
else
 begin
  id:=Context['x'].AsInteger;
  jrt_id:=Context['t'].AsInteger;
  g:=60;//counter warning

  if (Session.Journals[i].obj_id<>id) or (Session.Journals[i].jrt_id<>jrt_id) then
   begin

    qr:=TQueryResult.Create(Session.DbCon,'select granularity from Jrl where id=?',[Session.Journals[i].jrl_id]);
    try
      g:=qr.GetInt('granularity');
      if g<=0 then g:=60;
      gf:=g/1440.0;
    finally
      qr.Free;
    end;
    d:=Session.Journals[i].Start;
    m:=Round((Now-d)/gf)*g;
    d:=d-Frac(d/gf)*gf;

    if (Session.Journals[i].obj_id<>0) and (Context['r'].AsInteger<>2) then
     begin
      Session.DbCon.BeginTrans;
      try
        Session.DbCon.Insert('Jre',
          ['jrt_id',Session.Journals[i].jrt_id
          ,'obj_id',Session.Journals[i].obj_id
          ,'uid',Session.UserID
          ,'ts',VarFromDateTime(d)
          ,'minutes',m
          ,'c_ts',Session.Journals[i].Start
          ,'m_ts',VNow
          ]);
        Session.DbCon.CommitTrans;
      except
        Session.DbCon.RollbackTrans;
        raise;
      end;
     end;

    if jrt_id=0 then
     begin
      Session.Journals[i].jrt_id:=0;
      Session.Journals[i].jrt_icon:=0;
      Session.Journals[i].jrt_name:='';
     end
    else
     begin
      qr:=TQueryResult.Create(Session.DbCon,'select * from Jrt where id=?',[jrt_id]);
      try
        Session.Journals[i].jrt_id:=jrt_id;
        Session.Journals[i].jrt_icon:=qr.GetInt('icon');
        Session.Journals[i].jrt_name:=qr.GetStr('name');
      finally
        qr.Free;
      end;
     end;
    Session.Journals[i].obj_id:=id;
    Session.Journals[i].Start:=Now;
    Session.Journals[i].granularity:=g;
   end;

  case Context['r'].AsInteger of
    0:
      if Session.Journals[i].obj_id=0 then
       begin
        id:=Context['xx'].AsInteger;
        qr:=TQueryResult.Create(Session.DbCon,'select * from Jrt where jrl_id=? order by 1',[Session.Journals[i].jrl_id]) ;
        try
          while qr.Read do
            begin
            <<span onclick="$('#jrl[[=Session.Journals[i].jrl_id]]').load('iJre.xxm',
              {id:[[=Session.Journals[i].jrl_id]],t:[[=qr.GetInt('id')]],x:[[=id]],xxx:'[[#Session.SessionCrypt]]'});">>#txImg(qr.GetInt('icon'),qr.GetStr('name'))<</span>>
            end;
        finally
          qr.Free;
        end;
        ]]&nbsp;[[
       end
      else
       begin
        ]]
        [[#txImg(Session.Journals[i].jrt_icon,Session.Journals[i].jrt_name)]][[=JournalTime(Session.Journals[i].Start,g)]]
        <a href="#" class="linkbutton" onclick="$('#jrl[[=Session.Journals[i].jrl_id]]').load('iJre.xxm',
          {id:[[=Session.Journals[i].jrl_id]],x:0,xx:[[=Session.Journals[i].obj_id]],xxx:'[[#Session.SessionCrypt]]'});return false;">&bullet;</a>
        &nbsp;[[
       end;
    1:Context.Redirect('Journal.xxm',true);
    2:Context.Redirect('FrameJrl.xxm',true);
    else
      raise Exception.Create('Unsupported "r" value');
  end;
 end;