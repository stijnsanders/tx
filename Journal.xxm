[[@txSession,txDefs,txFilter,txFilterSql,txCache,txNodes,DataLank,Variants,xxmString]][[!var
IsAdmin,AnyConsultable:boolean;
qr:TQueryResult;
i,id,pid,d,d1,dt,g,m,c,mi,mj,mk,ml,mm,jrt_id:integer;
rpFilter:TtxRealmPermission;
filter,s,current:string;
fs:UTF8String;
f:TtxFilter;
fq:TtxSqlQueryFragments;
LocationCache:TItemCache;
ln:TLocationNode;
mt:array of record
  jrt_id,jrt_icon,m,c:integer;
  jrt_name:string;
end;
sc:TStringContext;
]][[

Context.Include('dHead.xxmi',['Journal']);
IsAdmin:=Session.IsAdmin('journals');
//assert Use_Journals

id:=Context['id'].AsInteger;
filter:=Context['filter'].Value;

//only one journal? use that one by default
if (filter<>'') and (id=0) and (Length(Session.Journals)=1) then id:=Session.Journals[0].jrl_id;

if id=0 then
 begin

  if Length(Session.Journals)=0 then
   begin
    <<p class="information">No journals available to you.</p>>
    if IsAdmin then
     begin
      <<p class="buttons"><a href="Journals.xxm" class="linkbutton">journals...</a></p>>
     end;
   end
  else
   begin
    if filter<>'' then
     begin
      <<p>
      <span class="litref">>=filter<</span>
      <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(filter)]]">filter</a>
      <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(filter)]]">build</a>
      </p>
      <p>Please select journal to apply filter to journal entries:</p>>
     end;
    <<table cellspacing="2" cellpadding="2" border="0" class="listtable">
    <tr>
    <th>journal</th>
    <th>&nbsp;</th>
    <th title="entries today">#</th>
    <th title="objects today">o#</th>
    <th title="minutes today">&Sigma;&#x27;</th>
    <th>current</th>
    <th>entry</th>
    <th>started</th>
    </tr>>
    AnyConsultable:=false;//default
    for i:=0 to Length(Session.Journals)-1 do
     begin
      if Session.Journals[i].CanConsult then AnyConsultable:=true;
      <<tr>
      <td><a href="?id=[[=Session.Journals[i].jrl_id]][[
      if filter<>'' then Context.Send('&filter='+URLEncode(filter));
      ]]">>=Session.Journals[i].jrl_name<</a></td>
      <td><a href="?id=[[=Session.Journals[i].jrl_id]][[
      if filter<>'' then Context.Send('&filter='+URLEncode(filter));
      ]]" class="linkbutton">entries...</a></td>>
      qr:=TQueryResult.Create(Session.DbCon,'select count(*) as entries,count(distinct Jre.obj_id) as objects,sum(Jre.minutes) as minutes'+
        ' from Jre inner join Jrt on Jrt.id=Jre.jrt_id'+
        ' where Jrt.jrl_id=? and Jre.uid=? and Jre.ts>=?',
        [Session.Journals[i].jrl_id,Session.UserID,VarFromDateTime(Date)]);
      try
        if qr.EOF then
         begin
          <<td style="text-align:right;">0</td>
          <td style="text-align:right;">0</td>
          <td style="text-align:right;">00:00</td>>
         end
        else
         begin
          m:=qr.GetInt('minutes');
          <<td style="text-align:right;">>.entries<</td>
          <td style="text-align:right;">>.objects<</td>
          [[#JournalMinutesTD(m)]]
          [[
        end;
      finally
        qr.Free;
      end;
      qr:=TQueryResult.Create(Session.DbCon,
        'select Obj.id, Obj.objtype_id, Obj.name, Obj.'+sqlDesc+', ObjType.icon, ObjType.name as typename,'+
        ' Jrx.ts, Jrt.icon as jrt_icon, Jrt.name as jrt_name,'+
        ' ObjTokRefCache.tokHTML, ObjTokRefCache.refHTML'+
        ' from Jrx inner join Jrt on Jrt.id=Jrx.jrt_id'+
        ' inner join Obj on Obj.id=Jrx.obj_id'+
        ' inner join ObjType on ObjType.id=Obj.objtype_id'+
        ' left outer join ObjTokRefCache on ObjTokRefCache.id=Obj.id'+
        ' where Jrx.uid=? and Jrt.jrl_id=?',
        [Session.UserID,Session.Journals[i].jrl_id]);
      try
        if qr.Read then
         begin
          <<td>>
          Context.Include('dObjLink.xxmi',[],[qr]);
          Context.Include('dObjTokRef.xxmi',[qr.GetInt('id'),#13#10' ','&nbsp;'],[qr]);
          //Context.Include('d_cmw.xxmi',[],[qr]);
          <</td>
          <td>>#txImg(qr.GetInt('jrt_icon'))]][[=qr.GetStr('jrt_name')<</td>
          <td style="text-align:right;">
          <span class="jrl">>=JournalTime(qr.GetDate('ts'),Session.Journals[i].granularity)<</span>
          <a href="iJre.xxm[[?'id',Session.Journals[i].jrl_id,'r',1]][[#txCallProtect]]" class="linkbutton">&bullet;</a>
          <a href="iJre.xxm[[?'id',Session.Journals[i].jrl_id,'r',2]][[#txCallProtect]]" class="linkbutton" onclick="return confirm('Are you sure to cancel this journal entry?');">cancel</a>
          </td>>
         end
        else
         begin
          <<td colspan="3">&mdash;</td>>
         end;
      finally
        qr.Free;
      end;
      <</tr>>
     end;
    <</table>
    <p class="buttons">>
    if IsAdmin or AnyConsultable then
     begin
      ]] <a href="Journals.xxm[[
      if filter<>'' then Context.SendHTML('?filter='+URLEncode(filter));
      ]]" class="linkbutton">journals...</a>>
     end;
    <</p>>

    s:=Context.ContextString(csReferer);
    if LowerCase(Copy(s,Length(s)-11,12))='/journal.xxm' then
     begin
      <<script><!--
      jrl_update();
      //--></script>>
     end;

  end;
 end
else
 begin
  i:=0;
  while (i<Length(Session.Journals)) and (Session.Journals[i].jrl_id<>id) do inc(i);
  if i=Length(Session.Journals) then raise Exception.Create('Unknown journal');

  <<h2>>=Session.Journals[i].jrl_name<</h2>>
  Context.Flush;

  sc:=TStringContext.Create(Context,Self);
  try
    sc.Include('iJrlCurrent.xxmi',[i]);
    current:=sc.Result;
  finally
    sc.Free;
  end;

  if filter<>'' then
   begin
    <<p>
    <span class="litref">>=filter<</span>
    <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(filter)]]">filter</a>
    <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(filter)]]">build</a>>
    if IsAdmin and (filter<>'') then
     begin
     ]] <a class="linkbutton" href="Journals.xxm[[?'filter',filter]]">journals</a>>
     end;
    <</p>>
   end;

  //if Context['all'].AsInteger=1 then rpFilter:=rpAny else rpFilter:=rpView;
  rpFilter:=rpAny;//?

  fq:=TtxSqlQueryFragments.Create(itObj);//itJournalEntry? see Journals.xxm (with "s")
  try
    fq.Fields:='Jre.id AS jre_id, Jre.jrt_id, Jre.ts, Jre.minutes, Jrt.icon AS jrt_icon, Jrt.name AS jrt_name,'+fq.Fields;
    fq.AddFrom('INNER JOIN Jre ON Jre.obj_id=Obj.id');
    fq.AddFrom('INNER JOIN Jrt ON Jrt.id=Jre.jrt_id');
    if filter<>'' then
     begin
      f:=TtxFilter.Create;
      try
        f.FilterExpression:=UTF8Encode(filter);
        if f.ParseError<>'' then
         begin
          <<p style="color:red;">>=f.ParseError<</p>>
         end;
        fq.AddFilter(f);
      finally
        f.Free;
      end;
     end; 
    if fq.Where<>'' then fq.Where:=' AND ('+fq.Where+')';
    fq.Where:='Jre.uid=? AND Jrt.jrl_id=? AND Obj.rlm_id'+Session.Realms[rpFilter].SQL+fq.Where;
    fq.OrderBy:='Jre.ts DESC';
    if Context['limit'].Value<>'' then
      fq.Limit:=Context['limit'].AsInteger
    else
      if filter='' then fq.Limit:=100;
    fs:=fq.SQL;
  finally
    fq.Free;
  end;

  LocationCache:=TItemCache.Create;
  qr:=TQueryResult.Create(Session.DbCon,fs,[Session.UserID,id]);
  try
    if qr.EOF then
     begin
      <<p><i>No journal entries found.</i></p>>
     end
    else
     begin
      <<p id="fliTitle" class="highlight1" style="position:absolute;margin:0em;font-weight:bold;"></p>
      <table cellspacing="2" cellpadding="2" border="0" class="listtable">
      <tr>
      <th>&nbsp;</th>
      <th>object</th>
      <th>entry</th>
      <th>start</th>
      <th title="minutes">&#x27;</th>
      <th>end</th>
      </tr>>
      m:=0;
      mi:=0;
      ml:=0;
      c:=0;
      d:=0;
      dt:=0;
      while qr.Read do
       begin
        if filter<>'' then
         begin
          inc(m,qr.GetInt('minutes'));
          inc(c);
          jrt_id:=qr.GetInt('jrt_id');
          mj:=0;
          while (mj<mi) and (mt[mj].jrt_id<jrt_id) do inc(mj);
          if (mj=mi) or (mt[mj].jrt_id<>jrt_id) then
           begin
            if mi=ml then
             begin
              inc(ml,$20);//grow
              SetLength(mt,ml);
             end;
            mk:=mi;
            inc(mi);
            while (mk>mj) do
             begin
              mt[mk]:=mt[mk-1];
              dec(mk);
             end;
            mt[mj].jrt_id:=jrt_id;
            mt[mj].jrt_icon:=qr.GetInt('jrt_icon');
            mt[mj].jrt_name:=qr.GetStr('jrt_name');
            mt[mj].m:=qr.GetInt('minutes');
            mt[mj].c:=1;
           end
          else
           begin
            inc(mt[mj].m,qr.GetInt('minutes'));
            inc(mt[mj].c);
           end;
         end;
        if current<>'' then
         begin
          Context.SendHTML(current);
          current:='';
         end;
        d1:=Trunc(qr.GetDate('ts'));
        if d<>d1 then
         begin
          if (d<>0) and (dt<>0) then
           begin
            <<script>document.getElementById("dt[[=d]]").innerText="[[=JournalMinutes(dt)]]";</script>>
           end;
          <<tr>
          <td>&nbsp;</td>
          <td style="font-weight:bold;">>=NiceDateTime(d1)<</td>
          <td>&nbsp;</td>
          <td>&nbsp;</td>
          <td id="dt[[=Trunc(d1)]]" style="text-align:right;color:silver;font-weight:bold;">&nbsp;</td>
          <td>&nbsp;</td>
          </tr>>
          d:=d1;
          dt:=0;
         end;
        <<tr>
        <td>
        <a href="fJre.xxm?id=[[.jre_id]]" class="linkbutton">edit</a>
        <a href="aJreDelete.xxm?id=[[.jre_id]][[#txCallProtect]]" class="linkbutton" onclick="return confirm('Are you sure to delete this journal entry?');">delete</a>
        </td>
        <td>>
        pid:=qr.GetInt('pid');
        s:=' ';
        while (pid<>0) and Context.Connected do
        begin
          ln:=LocationCache[pid] as TLocationNode;
          if ln=nil then ln:=LocationCache.Add(pid,TLocationNode.Create(itObj,pid)) as TLocationNode;
          s:=ln.GetHTML([ghLink,ghIcon,ghTitle,ghFrameListClass],pid)+s;
        end;
        Context.SendHTML(s);
        Context.Include('dObjLink.xxmi',[],[qr]);
        Context.Include('dObjTokRef.xxmi',[qr.GetInt('id'),#13#10' ','&nbsp;'],[qr]);
        //Context.Include('d_cmw.xxmi',[],[qr]);
        mm:=qr.GetInt('minutes');
        inc(dt,mm);
        <</td>
        <td>>#txImg(qr.GetInt('jrt_icon'))]][[.jrt_name<</td>
        <td style="text-align:right;">>=JournalDateTime(qr['ts'])<</td>
        [[#JournalMinutesTD(mm)]]
        <td style="text-align:right;">>=JournalDateTime(double(qr['ts'])+mm/1440.0)<</td>
        </tr>>
       end;
      <</table>
      <script><!--
      $(".fli")
      .mouseenter(function(){$("."+this.className.split(" ")[1]).addClass("highlight1");$("#fliTitle").text(this.title);})
      .mouseleave(function(){$("."+this.className.split(" ")[1]).removeClass("highlight1");$("#fliTitle").text("");});
      //--></script>>

      if (filter<>'') and (mi<>0) then
       begin
        <<table cellspacing="2" cellpadding="2" border="0" class="listtable">
        <tr>
        <th>entries</th>
        <th>#</th>
        <th>&Sigma;&#x27;</th>
        </tr>>
        //TODO: sort by jrt_name?jrt_id?
        for mj:=0 to mi-1 do
         begin
          <<tr>
          <td>>#txImg(mt[mj].jrt_icon)]][[=mt[mj].jrt_name<</td>
          <td style="text-align:right;">>=mt[mj].c<</td>
          [[#JournalMinutesTD(mt[mj].m)]]
          </tr>>
         end;
        <<tr>
        <th>&nbsp;</th>
        <th style="text-align:right;">>=c<</th>
        <th style="text-align:right;">>=JournalMinutes(m)<</th>
        </tr>
        </table>>
       end;
     end;
  finally
    qr.Free;
    LocationCache.Free;
  end;

  //TODO: load more (see fq.Limit above)
  //TODO: link to calendar view with totals

  if Session.Journals[i].CanConsult or IsAdmin then
   begin
    <<p class="buttons"><a href="Journals.xxm?id=[[=Session.Journals[i].jrl_id]][[
    if filter<>'' then Context.Send('&filter='+URLEncode(filter));
    ]]" class="linkbutton">consult...</a></p>>
   end;

 end;

Context.Include('dFoot.xxmi');
