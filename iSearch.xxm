[[@txDefs,DataLank,txSession,txFilter,txFilterSql,txCache,]][[!var
  name,keywords,filter:string;
  fs:UTF8String;
  f:TtxFilter;
  fq:TtxSqlQueryFragments;
  qr:TQueryResult;
  i,id,exclude,limit,c:integer;
  ic:TItemCache;
]][[
CheckCallProtect(Context);
name:=Context['name'].Value;
keywords:=Context['keywords'].Value;
filter:=Context['filter'].Value;
exclude:=Context['ex'].AsInteger;
limit:=Context['limit'].AsInteger;
if limit=0 then limit:=50;//default
if (keywords='') and (filter='') then
 begin
  <<div style="margin:0em;">
  <input type="text" id="searchText_[[=name]]" name="keywords" value="[[=Context['dss'].Value]]" size="50"
  onfocus="search_textEnter('[[=name]]','[[=exclude]]',this);" onblur="search_textLeave(this);" />
  <br />
  <label><input type="radio" name="action" id="" value="search" checked="1" /> objects</label>
  <label><input type="radio" name="action" id="" value="name" /> match whole name</label>
  <label><input type="radio" name="action" id="" value="rsearch" /> reports</label>
  <label><input type="radio" name="action" id="" value="term" /> terms</label>
  <br />
  <button id="searchButton_[[=name]]" onclick="return search_textSubmit('[[=name]]',[[=exclude]]);">Search</button>
  |
  <a href="ViewedLast.xxm" onclick="return selectnode_viewedLast(event,'[[=name]]',0,[[=exclude]]);" class="linkbutton">viewed recently...</a>
  <a href="SelectedLast.xxm" onclick="return selectnode_viewedLast(event,'[[=name]]',1,[[=exclude]]);" class="linkbutton">selected recently...</a>
  <br />
  <span id="search_[[=name]]_loading" style="display: none;">>#lblLoading<<br /></span>>
  if Session.FilterCache.Count<>0 then
   begin
    <<b>recent filters:</b><br />>
    for i:=0 to Session.FilterCache.Count-1 do
     begin
      <<a href="Filter.xxm?filter=[[=URLEncode(Session.FilterCache[i])]]" onclick="return search_textFilter('[[=name]]',[[=exclude]],this);">>=Session.FilterCache[i]<</a><br />>
     end;
   end;
  <</div>>
 end
else
 begin
  if filter='' then
    filter:=Context['action'].Value+'"'+StringReplace(keywords,'"','""',[rfReplaceAll])+'"';
  if exclude<>0 then filter:=filter+'/i'+IntToStr(exclude);

  <<span class="litref">>=filter<</span><br />>
  Context.Flush;

  f:=TtxFilter.Create;
  fq:=TtxSqlQueryFragments.Create(itObj);
  try
    f.FilterExpression:=UTF8Encode(filter);
    if f.ParseError<>'' then
     begin
      <<p style="color:red;">>=f.ParseError<</p>>
     end;
    fq.AddFilter(f);
    fq.Where:='Obj.rlm_id'+Session.Realms[rpView].SQL+' AND ('+fq.Where+')';
    //fq.Limit:=limit;//slows query performance tremendously on SQLServer! see loop below
    fs:=fq.SQL;
  finally
    f.Free;
    fq.Free;
  end;

  ic:=TItemCache.Create;
  qr:=TQueryResult.Create(Session.DbCon,fs,[]);
  try
    if qr.EOF then
     begin
      <<i>none found</i>>
     end;
    c:=0;
    while qr.Read and Context.Connected and (c<limit) do
     begin
      inc(c);
      //haschildren?
        id:=qr.GetInt('id');
        <<a id="[[=name]]_nodelink_[[=id]]" href="Item.xxm?x=i[[=id]]" onclick="return treenode_select(event,'[[=name]]',[[=id]]);" title="[[.typename]]">[[#txImg(qr.GetInt('icon'))]] <span id="nodename[[=id]]">>.name<</span></a>>
        Context.Include('dObjTokRef.xxmi',[id,#13#10' ',' '],[qr]);
        Context.Include('dObjLocMini.xxmi',[],[qr,ic]);
        <<br />>
     end;
    if c=limit then
     begin
      <<i>&nbsp;(results limited to [[=limit]])</i>>
     end;
  finally
    qr.Free;
    ic.Free;
  end;

 end;
]]
