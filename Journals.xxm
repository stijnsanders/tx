[[@txSession,txDefs,txFilter,txFilterSql,txCache,txNodes,DataLank]][[!var
IsAdmin:boolean;
qr,qr1:TQueryResult;
s,t:string;
id,root_id,i,m,c,mi,mj,mk,ml,pid,jrt_id:integer;
rpFilter:TtxRealmPermission;
filter,fusers:string;
fs:UTF8String;
f,f1:TtxFilter;
fq,fq1:TtxSqlQueryFragments;
LocationCache:TItemCache;
ln:TLocationNode;
mt:array of record
  jrt_id,jrt_icon,m,c:integer;
  jrt_name:string;
end;
]][[

Context.Include('dHead.xxmi',['Journals']);
IsAdmin:=Session.IsAdmin('journals');
//assert Use_Journals
id:=Context['id'].AsInteger;
filter:=Context['filter'].Value;
fusers:=Context['users'].Value;

//only one journal? use that one by default
if not(IsAdmin) and ((filter<>'') or (fusers<>'')) and (id=0) and (Length(Session.Journals)=1) then id:=Session.Journals[0].jrl_id;

if id=0 then
 begin
  if IsAdmin then
    qr:=TQueryResult.Create(Session.DbCon,'select * from Jrl order by id',[])
  else
   begin
    fs:='';
    c:=0;
    for i:=0 to Length(Session.Journals)-1 do
      if Session.Journals[i].CanConsult then
       begin
        fs:=fs+','+IntToStrU(Session.Journals[i].jrl_id);
        inc(c);
       end;
    case c of
      0:fs:='=0';//assert no Jrl.id=0
      1:fs[1]:='=';
      else
       begin
        fs[1]:='(';
        fs:=' in '+fs+')';
       end;
    end;
    qr:=TQueryResult.Create(Session.DbCon,'select * from Jrl where Jrl.id'+fs+' order by id',[]);
   end;
  try
    if qr.EOF then
     begin
      if IsAdmin then
       begin
        <<p class="information">No journals.<br /><a href="fJrl.xxm">Click here</a> to create a journal.</p>>
       end
      else
       begin
        <<p class="information">You currently have no consultable journals.</p>>
       end;
     end
    else
     begin
      if (filter<>'') or (fusers<>'') then
       begin
        <<p>>
        if fusers<>'' then
         begin
          ]] Users:
          <span class="litref">>=fusers<</span>
          <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(fusers)]]">filter</a>
          <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(fusers)]]">build</a>>
         end;
        if filter<>'' then
         begin
          ]] Objects:
          <span class="litref">>=filter<</span>
          <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(filter)]]">filter</a>
          <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(filter)]]">build</a>>
         end;
        <</p>
        <p>Please select journal to apply filter to journal entries:</p>>
       end
      else
      if IsAdmin then
       begin
        <<p class="buttons"><a href="fJrl.xxm" class="linkbutton">add...</a></p>>
       end;
      <<table cellspacing="2" cellpadding="2" border="0" class="listtable">
      <tr>>
      if IsAdmin then
       begin
        <<th>&nbsp;</th>>
       end;
      <<th>name</th>
      <th title="granularity (minutes)">&#x27;</th>
      <th>entry types</th>
      <th>available to</th>
      <th>consultable by</th>
      <th>branch</th>
      <th>limited to</th>
      <th>&nbsp;</th>
      </tr>>
  
      while qr.Read do
       begin
        id:=qr.GetInt('id');
        <<tr>>
        if IsAdmin then
         begin
          <<td style="white-space:nowrap;">
          <a href="fJrl.xxm?id=[[=id]]" class="linkbutton">edit</a>
          <a href="fDelete.xxm?x=j[[=id]]" class="linkbutton">delete</a>
          </td>>
         end;
        s:=qr.GetStr('name');
        if s='' then s:='#'+IntToStr(id);
        <<td><a href="?id=[[=id]][[
        if filter<>'' then Context.Send('&filter='+URLEncode(filter));
        if fusers<>'' then Context.Send('&user='+URLEncode(fusers));
        ]]">>=s<</a></td>
        <td style="text-align:right;">>.granularity<</td>
        <td>>
        qr1:=TQueryResult.Create(Session.DbCon,'select * from Jrt where jrl_id=? order by 1',[id]);
        try
          while qr1.Read do
           begin
            <<a href="fJrt.xxm[[?'id',qr1['id']]]">>#txImg(qr1.GetInt('icon'))]]&nbsp;[[=qr1['name']<</a> [[
           end;
        finally
          qr1.Free;
        end;
        if IsAdmin then
         begin
          <<a href="fJrt.xxm[[?'jrl',id]]" class="linkbutton">add</a>>
         end;
        <</td>
        <td style="white-space:nowrap;">>
        s:=qr.GetStr('view_expression');
        if s='' then Context.SendHTML('&ndash;') else
         begin
          t:='?filter='+string(URLEncode(s));
          <<span class="litref">>=s<</span><br />
          <a href="Filter.xxm[[=t]]" class="linkbutton">filter</a>
          <a href="FilterBuild.xxm[[=t]]" class="linkbutton">build</a>>
         end;
        <</td>
        <td style="white-space:nowrap;">>
        s:=qr.GetStr('edit_expression');
        if s='' then Context.SendHTML('&ndash;') else
         begin
          t:='?filter='+string(URLEncode(s));
          <<span class="litref">>=s<</span><br />
          <a href="Filter.xxm[[=t]]" class="linkbutton">filter</a>
          <a href="FilterBuild.xxm[[=t]]" class="linkbutton">build</a>>
         end;
        <</td>
        <td>>
        if qr.IsNull('root_id') then
          Context.SendHTML('&ndash;')
        else
         begin
          root_id:=qr.GetInt('root_id');
          qr1:=TQueryResult.Create(Session.DbCon,sqlObjByID,[root_id]);
          try
            Context.Include('dObjLink.xxmi',[],[qr1]);
            Context.Include('dObjTokRef.xxmi',[root_id,#13#10' ','&nbsp;'],[qr1]);
            //Context.Include('d_cmw.xxmi',[],[qr]);
          finally
            qr1.Free;
          end;
         end;
        <</td>
        <td style="white-space:nowrap;">>
        s:=qr.GetStr('limit_expression');
        if s='' then Context.SendHTML('&ndash;') else
         begin
          t:='?filter='+string(URLEncode(s));
          <<span class="litref">>=s<</span><br />
          <a class="linkbutton" href="Filter.xxm[[=t]]">filter</a>
          <a class="linkbutton" href="FilterBuild.xxm[[=t]]">build</a>>
         end;
        <</td>
        <td>>Context.Include('d_cmw.xxmi',[],[qr,nil]);<</td>
        </tr>>
       end;
  
      <</table>
      <p class="buttons">>
      if IsAdmin then
       begin
        <<a class="linkbutton" href="fJrl.xxm">add...</a>>
       end;
      ]]
      <a class="linkbutton" href="JrlTotals.xxm">totals...</a>
      <a class="linkbutton" href="fJrlFilter.xxm">filter entries...</a>
      </p>>
        
     end;
  finally
    qr.Free;
  end;
 end
else
 begin

  if not IsAdmin then
   begin
    i:=0;
    while (i<Length(Session.Journals)) and (Session.Journals[i].jrl_id<>id) do inc(i);
    if not((i<Length(Session.Journals)) and Session.Journals[i].CanConsult) then
      raise Exception.Create('Access denied');
   end;

  qr:=TQueryResult.Create(Session.DbCon,'select * from Jrl where id=?',[id]);
  try
    <<h2>>.name<</h2>>
  finally
    qr.Free;
  end;

  if (filter<>'') or (fusers<>'') then
   begin
    <<p>>
    <</p>>
    if fusers<>'' then
     begin
      ]] Users:
      <span class="litref">>=fusers<</span>
      <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(fusers)]]">filter</a>
      <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(fusers)]]">build</a>
      </p>>
     end;
    if filter<>'' then
     begin
      ]] Objects:
      <span class="litref">>=filter<</span>
      <a class="linkbutton" href="Filter.xxm?filter=[[=URLEncode(filter)]]">filter</a>
      <a class="linkbutton" href="FilterBuild.xxm?filter=[[=URLEncode(filter)]]">build</a>>
     end;
    <</p>>
   end;

  //if Context['all'].AsInteger=1 then rpFilter:=rpAny else rpFilter:=rpView;
  rpFilter:=rpAny;//?

  fq:=TtxSqlQueryFragments.Create(itJournalEntry);
  try
    if filter<>'' then
     begin
      f:=TtxFilter.Create;
      try
        f.FilterExpression:=UTF8Encode(filter);
        if f.ParseError<>'' then
         begin
          <<p style="color:red;">>=f.ParseError<</p>>
         end;
        fq.AddFilter(f);
      finally
        f.Free;
      end;
     end; 
    if fq.Where<>'' then fq.Where:=' AND ('+fq.Where+')';
    fq.Where:='Jrt.jrl_id=? AND Obj.rlm_id'+Session.Realms[rpFilter].SQL+fq.Where;

    if fusers<>'' then
     begin
      fq1:=TtxSqlQueryFragments.Create(itObj);
      try
        fq1.Tables:='Obj LEFT JOIN ObjType ON ObjType.id=Obj.objtype_id'#13#10;
        f1:=TtxFilter.Create;
        try
          f1.FilterExpression:=UTF8Encode(fusers);
          if f1.ParseError<>'' then
           begin
            <<p style="color:red;">>=f1.ParseError<</p>>
           end;
          fq1.AddFilter(f1);
        finally
          f1.Free;
        end;

        fq1.Fields:='Obj.id';
        if fq1.Where<>'' then fq1.Where:=' AND ('+fq1.Where+')';
        fq1.Where:='Obj.rlm_id'+Session.Realms[rpFilter].SQL+fq1.Where;//?
        fq1.OrderBy:='';
        fq.Where:=fq.Where+#13#10'AND Jre.uid in ('+fq1.SQL+')';

      finally
        fq1.Free;
      end;
     end;

    if Context['limit'].Value<>'' then
      fq.Limit:=Context['limit'].AsInteger
    else
      if filter='' then fq.Limit:=100;
    fs:=fq.SQL;
  finally
    fq.Free;
  end;

  LocationCache:=TItemCache.Create;
  qr:=TQueryResult.Create(Session.DbCon,fs,[id]);
  try
    if qr.EOF then
     begin
      <<p><i>No journal entries found.</i></p>>
     end
    else
     begin
      <<p id="fliTitle" class="highlight1" style="position:absolute;margin:0em;font-weight:bold;"></p>
      <table cellspacing="2" cellpadding="2" border="0" class="listtable">
      <tr>
      <th>user</th>
      <th>object</th>
      <th>entry</th>
      <th>start</th>
      <th title="minutes">&#x27;</th>
      <th>end</th>
      </tr>>
      m:=0;
      mi:=0;
      ml:=0;
      c:=0;
      while qr.Read do
       begin
        if filter<>'' then
         begin
          inc(m,qr.GetInt('minutes'));
          inc(c);
          jrt_id:=qr.GetInt('jrt_id');
          mj:=0;
          while (mj<mi) and (mt[mj].jrt_id<jrt_id) do inc(mj);
          if (mj=mi) or (mt[mj].jrt_id<>jrt_id) then
           begin
            if mi=ml then
             begin
              inc(ml,$20);//grow
              SetLength(mt,ml);
             end;
            mk:=mi;
            inc(mi);
            while (mk>mj) do
             begin
              mt[mk]:=mt[mk-1];
              dec(mk);
             end;
            mt[mj].jrt_id:=jrt_id;
            mt[mj].jrt_icon:=qr.GetInt('jrt_icon');
            mt[mj].jrt_name:=qr.GetStr('jrt_name');
            mt[mj].m:=qr.GetInt('minutes');
            mt[mj].c:=1;
           end
          else
           begin
            inc(mt[mj].m,qr.GetInt('minutes'));
            inc(mt[mj].c);
           end;
         end;
        <<tr>
        <td>
        <a href="Item.xxm?x=i[[.uid]]" title="[[.usrtypename]]">>#txImg(qr.GetInt('usricon'))]] [[.usrname<</a>
        [[//TODO: IsAdmin fJre, delete?]]
        </td>
        <td>>
        pid:=qr.GetInt('pid');
        s:=' ';
        while (pid<>0) and Context.Connected do
        begin
          ln:=LocationCache[pid] as TLocationNode;
          if ln=nil then ln:=LocationCache.Add(pid,TLocationNode.Create(itObj,pid)) as TLocationNode;
          s:=ln.GetHTML([ghLink,ghIcon,ghTitle,ghFrameListClass],pid)+s;
        end;
        Context.SendHTML(s);
        Context.Include('dObjLink.xxmi',[],[qr]);
        Context.Include('dObjTokRef.xxmi',[qr.GetInt('id'),#13#10' ','&nbsp;'],[qr]);
        //Context.Include('d_cmw.xxmi',[],[qr]);
        <</td>
        <td>>#txImg(qr.GetInt('jrt_icon'))]][[.jrt_name<</td>
        <td style="text-align:right;">>=JournalDateTime(qr['ts'])<</td>
        [[#JournalMinutesTD(qr.GetInt('minutes'))]]
        <td style="text-align:right;">>=JournalDateTime(double(qr['ts'])+qr.GetInt('minutes')/1440.0)<</td>
        </tr>>
       end;
      <</table>
      <script><!--
      $(".fli")
      .mouseenter(function(){$("."+this.className.split(" ")[1]).addClass("highlight1");$("#fliTitle").text(this.title);})
      .mouseleave(function(){$("."+this.className.split(" ")[1]).removeClass("highlight1");$("#fliTitle").text("");});
      //--></script>>

      if (filter<>'') and (mi<>0) then
       begin
        <<table cellspacing="2" cellpadding="2" border="0" class="listtable">
        <tr>
        <th>entries</th>
        <th>#</th>
        <th>&Sigma;&#x27;</th>
        </tr>>
        //TODO: sort by jrt_name?jrt_id?
        for mj:=0 to mi-1 do
         begin
          <<tr>
          <td>>#txImg(mt[mj].jrt_icon)]][[=mt[mj].jrt_name<</td>
          <td style="text-align:right;">>=mt[mj].c<</td>
          [[#JournalMinutesTD(mt[mj].m)]]
          </tr>>
         end;
        <<tr>
        <th>&nbsp;</th>
        <th style="text-align:right;">>=c<</th>
        <th style="text-align:right;">>=JournalMinutes(m)<</th>
        </tr>
        </table>>
       end;
     end;
  finally
    qr.Free;
    LocationCache.Free;
  end;

  //TODO: load more (see fq.Limit above)
  //TODO: link to calendar view with totals

 end;
Context.Include('dFoot.xxmi');
  