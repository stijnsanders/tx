[[@txSession,txDefs,DataLank,]][[!var
id,jrl_id,jrt_id,g,m0,m1,m2,mm:integer;
qr,qr1:TQueryResult;
d0,d1,d2,dd:TDateTime;
const
HalfAMinute=0.5/1440.0;
]][[

Context.Include('dHead.xxmi',['Journal Entry']);
//assert Use_Journals

id:=Context['id'].AsInteger;

qr:=TQueryResult.Create(Session.DbCon,
  'select Jre.*, Jrl.id as jrl_id, Jrl.name as jrl_name, Jrl.granularity'+
  ' from Jre'+
  ' inner join Jrt on Jrt.id=Jre.jrt_id'+
  ' inner join Jrl on Jrl.id=Jrt.jrl_id'+
  ' where Jre.id=? and Jre.uid=?',[id,Session.UserID]);
try
  jrl_id:=qr.GetInt('jrl_id');
  jrt_id:=qr.GetInt('jrt_id');
  g:=qr.GetInt('granularity');
  if g<=0 then g:=60;

  d1:=qr.GetDate('ts');
  m1:=qr.GetInt('minutes');

  //ts before
  qr1:=TQueryResult.Create(Session.DbCon,
    'select Jre.ts+Jre.minutes/1440.0 as ts from Jre inner join Jrt on Jrt.id=Jre.jrt_id'+
    ' where Jre.id<>? and Jrt.jrl_id=? and Jre.uid=? and Jre.ts+Jre.minutes/1440.0<? order by Jre.ts desc limit 1',[id,jrl_id,Session.UserID,d1]);
  try
    dd:=d1-8.0/24.0;//?
    if qr1.EOF then
      d0:=dd
    else
     begin
      d0:=qr1.GetDate('ts');
      if dd>d0 then d0:=dd;
     end;
  finally
    qr1.Free;
  end;

  //ts after
  qr1:=TQueryResult.Create(Session.DbCon,
    'select Jre.ts from Jre inner join Jrt on Jrt.id=Jre.jrt_id'+
    ' where Jre.id<>? and Jrt.jrl_id=? and Jre.uid=? and Jre.ts>? order by Jre.ts limit 1',[id,jrl_id,Session.UserID,d1]);
  try
    dd:=d1+8.0/24.0;//?
    if dd>Now then dd:=Now;
    if qr1.EOF then
      d2:=dd
    else
     begin
      d2:=qr1.GetDate('ts');
      if dd<d2 then d2:=dd;
     end;
  finally
    qr1.Free;
  end;

  d0:=JournalGranulate(d0,g);
  d1:=JournalGranulate(d1,g);
  d2:=JournalGranulate(d2,g);
  m2:=Trunc((d2-d0)*1440.0);

  <<h2>Journal Entry</h2>
  [[#txForm('aJre.xxm',['id',id])]]
  [[#txFormProtect]]
  <dl>
  <dt>Journal</dt>
  <dd>>.jrl_name<</dd>
  </dd>
  <dt>Object</dt>
  <dd>>

  if d1>Now-1.0 then
    Context.Include('dObjSelect.xxmi',['obj',qr.GetInt('obj_id')])
  else
   begin
    qr1:=TQueryResult.Create(Session.DbCon,sqlObjByID,[qr.GetInt('obj_id')]);
    try
      Context.Include('dObjLink.xxmi',[],[qr1]);
      Context.Include('dObjTokRef.xxmi',[qr1.GetInt('id'),#13#10' ','&nbsp;'],[qr1]);
      //Context.Include('d_cmw.xxmi',[],[qr1]);
    finally
      qr1.Free;
    end;
   end;

  <</dd>
  <dt>Entry type</dt>
  <dd>>
  qr1:=TQueryResult.Create(Session.DbCon,'select * from Jrt where jrl_id=? order by 1',[jrl_id]);
  try
    while qr1.Read do
     begin
      <<label><input type="radio" name="jrt" value="[[=qr1['id']]]"[[if jrt_id=qr1.GetInt('id') then Context.SendHTML(' checked="1"');]]>
      [[#txImg(qr1['icon'])]][[=qr1['name']]]
      </label><br />>
     end;
  finally
    qr1.Free;
  end;
  <</dd>
  <dt>Start</dt>
  <dd><select name="ts">>
  dd:=d0;
  while dd<d2+HalfAMinute do
   begin
    <<option value="[[=jtFromDateTime(dd)]]"[[
    if Abs(dd-d1)<HalfAMinute then Context.SendHTML(' selected="1"');
    ]]>>=JournalDateTime(dd)<</option>>
    dd:=dd+g/1440.0;
   end;
  <</select></dd>
  <dt>Duration</dt>
  <dd>>
  {if false then begin
  <<input type="text" name="minutes" value="[[=qr['minutes']]]" />&#x27;[[
  end else} begin
  <<select name="minutes">>
  mm:=0;
  while mm<=m2 do
   begin
    <<option value="[[=mm]]"[[if mm=m1 then Context.SendHTML(' selected="1"');]]>>=JournalMinutes(mm)<</option>>
    inc(mm,g);
   end;
  <</select> minutes[[
  end;
  <</dd>
  </dl>
  [[#txFormButton]]
  <a href="Journal.xxm?id=[[=qr['jrl_id']]]">back</a>
  </form>>
finally
  qr.Free;
end;

Context.Include('dFoot.xxmi');
