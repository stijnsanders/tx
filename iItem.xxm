[[@txDefs,txSession,DataLank,]][[!var
qr:TQueryResult;
ItemType:TtxITemType;
ItemID:integer;
name:string;
hasChildren,preExpand,highlight:boolean;
]][[

{
ATTENTION!!!
Calls over XMLHTTP start a new session,
if needed, rig xxmp to get the session from a SessionID request parameter, in favour of the Context.SessionID
}

CheckCallProtect(Context);
txItem(Context['x'].Value,ItemType,ItemID);
name:=Context['name'].Value;

if ItemType=itObj then
 begin
  qr:=TQueryResult.Create(Session.DbCon,UTF8String(StringReplace(string(sqlObjsByPid),'Obj.pid=?','Obj.id=?',[])),[ItemID]);
  try
    hasChildren:=DBExists('SELECT id FROM Obj WHERE pid=? LIMIT 1',[ItemID]);
    preExpand:=false;//TODO: get from caller?
    highlight:=false;
    Context.Include('iFrameObj.xxmi',[name,ItemID,hasChildren,preExpand,highlight],[qr]);
  finally
    qr.Free;
  end;
 end
else
 begin
  qr:=TQueryResult.Create(Session.DbCon,'SELECT * FROM '+txItemTypeTable[ItemType]+' WHERE id=?',[ItemID]);
  try
    hasChildren:=DBExists('SELECT id FROM '+txItemTypeTable[ItemType]+' WHERE pid=? LIMIT 1',[ItemID]);
    preExpand:=false;//TODO: get from caller?
    highlight:=false;
    Context.Include('iFrameType.xxmi',[name,ItemType,ItemID,hasChildren,preExpand,highlight],[qr]);
  finally
    qr.Free;
  end;
 end;
]]
