[[@txSession,txDefs,txFilter,txFilterSql,txCache,txNodes,DataLank]][[!var
IsAdmin:boolean;
qr:TQueryResult;
fs0:UTF8String;
LocationCache:TItemCache;
ln:TLocationNode;
i,c,pid:integer;
s:string;
]][[

//TODO: TtxItemType itJournalEntryStart

Context.Include('dHead.xxmi',['Journals: Started']);
IsAdmin:=Session.IsAdmin('journals');
//assert Use_Journals

  if IsAdmin then
    fs0:='<>0'
  else
   begin
    fs0:='';
    c:=0;
    for i:=0 to Length(Session.Journals)-1 do
      if Session.Journals[i].CanConsult then
       begin
        fs0:=fs0+','+IntToStrU(Session.Journals[i].jrl_id);
        inc(c);
       end;
    case c of
      0:fs0:='=0';//assert no Jrl.id=0
      1:fs0[1]:='=';
      else
       begin
        fs0[1]:='(';
        fs0:=' in '+fs0+')';
       end;
    end;
   end;

  LocationCache:=TItemCache.Create;
  qr:=TQueryResult.Create(Session.DbCon,
    'select Jrl.id as jrl_id, Jrl.name as jrl_name, Jrl.granularity,'
    +' Obj.id, Obj.pid, Obj.objtype_id, Obj.name, Obj.'+sqlDesc+', ObjType.icon, ObjType.name as typename,'
    +' Jrx.ts, Jrx.obj_id, Jrx.uid, Jrt.icon as jrt_icon, Jrt.name as jrt_name,'
    +' ObjTokRefCache.tokHTML, ObjTokRefCache.refHTML,'
    +' UsrObj.id AS usrid, UsrObj.name AS usrname, UsrObjType.icon AS usricon, UsrObjType.name AS usrtypename'
    +' from Jrx inner join Jrt on Jrt.id=Jrx.jrt_id'
    +' inner join Jrl on Jrl.id=Jrt.jrl_id'
    +' inner join Obj on Obj.id=Jrx.obj_id'
    +' inner join ObjType on ObjType.id=Obj.objtype_id'
    +' left outer join ObjTokRefCache on ObjTokRefCache.id=Obj.id'
    +' inner join Obj as UsrObj on UsrObj.id=Jrx.uid'
    +' inner join ObjType as UsrObjType on UsrObjType.id=UsrObj.objtype_id'
    +' where Jrl.id'+fs0
    +' order by Jrx.ts, Jrx.id'
    ,[]);
  try
    if qr.EOF then
     begin
      <<p><i>No journal entries found.</i></p>>
     end
    else
     begin
      <<p id="fliTitle" class="highlight1" style="position:fixed;margin:0em;font-weight:bold;"></p>
      <table cellspacing="2" cellpadding="2" border="0" class="listtable">
      <tr>
      <th>journal</th>
      <th>user</th>
      <th>object</th>
      <th>entry</th>
      <th>started</th>
      </tr>>
      while qr.Read do
       begin
        <<tr>
        <td><a href="Journals.xxm?id=[[.jrl_id]]">>.jrl_name<</a></td>
        <td>
        <a href="Item.xxm?x=i[[.uid]]" title="[[.usrtypename]]">>#txImg(qr.GetInt('usricon'))]] [[.usrname<</a>
        </td>
        <td>>
        pid:=qr.GetInt('pid');
        s:=' ';
        while (pid<>0) and Context.Connected do
         begin
          ln:=LocationCache[pid] as TLocationNode;
          if ln=nil then ln:=LocationCache.Add(pid,TLocationNode.Create(itObj,pid)) as TLocationNode;
          s:=ln.GetHTML([ghLink,ghIcon,ghTitle,ghFrameListClass],pid)+s;
         end;
        Context.SendHTML(s);
        <<a href="Item.xxm?x=i[[.obj_id]]" title="[[.typename]]">>#txImg(qr.GetInt('icon'))]]&nbsp;[[.name<</a>>
        Context.Include('dObjTokRef.xxmi',[qr.GetInt('id'),#13#10' ','&nbsp;'],[qr]);
        //Context.Include('d_cmw.xxmi',[],[qr]);
        <</td>
        <td>>#txImg(qr.GetInt('jrt_icon'))]][[.jrt_name<</td>
        <td>>=JournalTime(double(qr['ts']),qr.GetInt('granularity'))<</td>
        </tr>>
       end;
      <</table>
      <script><!--
      $(".fli")
      .mouseenter(function(){$("."+this.className.split(" ")[1]).addClass("highlight1");$("#fliTitle").text(this.title);})
      .mouseleave(function(){$("."+this.className.split(" ")[1]).removeClass("highlight1");$("#fliTitle").text("");});
      //--></script>>
     end;
  finally
    qr.Free;
    LocationCache.Free;
  end;

Context.Include('dFoot.xxmi');
