[[@txDefs,txSession,DataLank,txTerms,txFilter,txFilterSql]][[!var
qr,qr1:TQueryResult;
id,qid,i,d,hi:integer;
ShowControls,InControl,b:boolean;
url,s:string;
f:TtxFilter;
fq:TtxSqlQueryFragments;
]][[
qr:=Objects[0] as TQueryResult;
id:=qr.GetInt('id');

ShowControls:=(Length(Values)<2) or boolean(Values[1]);
InControl:=ShowControls;
try
  if ShowControls then Session.HasRealmPermission(id,qr.GetInt('rlm_id'),rpEdit);
except
  on ERealmNotEditableByUser do InControl:=false;
end;
if not InControl then
  Session.HasRealmPermission(id,qr.GetInt('rlm_id'),rpView);

d:=Values[0];
Context.Include('dObjLocation.xxmi',[true],[qr]);
<<p class="objecttitle" title="[[.typename]]">>#txImg(qr.GetInt('icon'))]]&nbsp;[[#TermStore.TermLinks(itObj,id,d,HTMLEncode(qr.GetStr('name')))<</p>>
//TODO: wiki text
Context.SendHTML(TermStore.TermLinks(itObj,id,d,qr.GetStr('desc')));
url:=qr.GetStr('url');
if url<>'' then
 begin
  <<p><span class="label">url:</span> <a href="[[=url]]">>=url<</a></p>>
 end;
<<p>>
Context.Include('d_cmw.xxmi',['',id],[qr]);

if Use_Journals then
  for i:=0 to Length(Session.Journals)-1 do
   begin
    qr1:=TQueryResult.Create(Session.DbCon,
      'select Jrl.root_id, ObjPath.oid, Jrl.limit_expression, Jrl.granularity'+
      ' from Jrl'+
      ' left outer join ObjPath on ObjPath.pid=Jrl.root_id and ObjPath.oid=?'+
      ' where Jrl.id=?',[id,Session.Journals[i].jrl_id]);
    try
      b:=qr1.IsNull('root_id') or not(qr1.IsNull('oid'));
      s:=qr1.GetStr('limit_expression');
      Session.Journals[i].granularity:=qr1.GetInt('granularity');
    finally
      qr1.Free;
    end;
    if b and (s<>'') then
     begin
      f:=TtxFilter.Create;
      fq:=TtxSqlQueryFragments.Create(itObj);
      try
        fq.Fields:='Obj.id';
        fq.Tables:='Obj LEFT JOIN ObjType ON ObjType.id=Obj.objtype_id'#13#10;
        fq.Where:='Obj.id='+IntToStrU(id)+' AND ';
        fq.GroupBy:='';
        fq.Having:='';
        fq.OrderBy:='';
        f.FilterExpression:=UTF8Encode(s);
        fq.AddFilter(f);
        qr1:=TQueryResult.Create(Session.DbCon,fq.Sql,[]);
        try
          b:=not(qr1.EOF);
        finally
          qr1.Free;
        end;
      finally
        f.Free;
        fq.Free;
      end;
     end;
    if b then
     begin
      <<span id="jrl[[=Session.Journals[i].jrl_id]]" class="jrl">>
      qr1:=TQueryResult.Create(Session.DbCon,
        'select Jrx.obj_id, Jrx.jrt_id, Jrt.icon, Jrt.name, Jrx.ts'+
        ' from Jrx inner join Jrt on Jrt.id=Jrx.jrt_id'+
        ' where Jrx.uid=? and Jrx.obj_id=? and Jrt.jrl_id=?',
        [Session.UserID,id,Session.Journals[i].jrl_id]);
      try
        if qr1.Read then
         begin
          ]]
          [[#txImg(qr1.GetInt('icon'),qr1.GetStr('name'))]][[=JournalTime(qr1.GetDate('ts'),Session.Journals[i].granularity)]]
          <a href="#" class="linkbutton" onclick="$('#jrl[[=Session.Journals[i].jrl_id]]').load('iJre.xxm',
            {id:[[=Session.Journals[i].jrl_id]],x:0,xx:[[=id]],xxx:'[[#Session.SessionCrypt]]'},
            jrl_update);return false;">&bullet;</a>
          &nbsp;[[
         end
        else
          b:=false;
      finally
        qr1.Free;
      end;
      if not(b) then
       begin
        qr1:=TQueryResult.Create(Session.DbCon,'select * from Jrt where jrl_id=? order by 1',[Session.Journals[i].jrl_id]) ;
        try
          while qr1.Read do
           begin
            <<span onclick="$('#jrl[[=Session.Journals[i].jrl_id]]').load('iJre.xxm',
              {id:[[=Session.Journals[i].jrl_id]],t:[[=qr1.GetInt('id')]],x:[[=id]],xxx:'[[#Session.SessionCrypt]]'},
              jrl_update);">>#txImg(qr1.GetInt('icon'),qr1.GetStr('name'))<</span>>
           end;
        finally
          qr1.Free;
        end;
        ]]&nbsp;[[
       end;
      <</span>>
     end;
   end;

<</p>>

  if InControl then
   begin
    <<p class="buttons">
    <a href="fObj.xxm?pid=[[.pid]]" class="linkbutton" rel="nofollow">add another</a>
    <a href="fObj.xxm?pid=[[=id]]" class="linkbutton" rel="nofollow">add child</a>
    |
    <a href="fTok.xxm?id=[[=id]]" class="linkbutton" rel="nofollow">add token</a>
    <a href="fRef.xxm?id=[[=id]]" class="linkbutton" rel="nofollow">add reference</a>
    |
    <a href="fObj.xxm?id=[[=id]]" class="linkbutton" rel="nofollow">edit</a>
    <a href="fMove.xxm?x=i[[=id]]" class="linkbutton" rel="nofollow">move</a>
    [[if Session.Realms[rpEdit].Count>1 then
      begin <<a href="fObjRealm.xxm?x=i[[=id]]" class="linkbutton" rel="nofollow">realm #[[.rlm_id<</a>> end;]]
    [[if Use_Unread then
      begin <<a href="aUnread.xxm?id=[[=id]][[#txCallProtect]]" class="linkbutton" rel="nofollow">mark unread</a>> end;]]
    |
    <a href="fDelete.xxm?x=i[[=id]]" class="linkbutton" rel="nofollow">delete</a>
    </p>>
   end
  else if Session.IsAnonymous then
   begin
    <<p class="buttons">
    <a href="Logon.xxm?x=1" class="linkbutton" rel="nofollow">add</a>
    |
    <a href="Logon.xxm?x=1" class="linkbutton" rel="nofollow">edit</a>
    <a href="Logon.xxm?x=1" class="linkbutton" rel="nofollow">move</a>
    |
    <a href="Logon.xxm?x=1" class="linkbutton" rel="nofollow">delete</a>
    </p>>
   end;

  //extra
  if Use_Extra then
   begin
    s:=qr.GetStr('typesystem');
    if (Length(s)>3) and (s[1]=':') and (s[2]=':') then
      Context.Include('xxm:'+Copy(s,3,Length(s)-2),[id]);
   end;

  //children
  qr:=TQueryResult.Create(Session.DbCon,sqlObjsByPid,[id]);
  try
    if not qr.EOF then
     begin
      <<p class="midnav">[[#lblDescendants]] children
        <a href="Search.xxm?pid=[[=id]]" class="linkbutton" rel="nofollow">search...</a>
        <a href="Filter.xxm?filter=c[[=id]]*" class="linkbutton" rel="nofollow">filter...</a>>
        if Use_Unread then
         begin
          ]] <span id="markread[[=id]]"><a href="Read.xxm?id=[[=id]]" class="linkbutton" rel="nofollow" onclick="if(confirm('Mark children read?'))$('#markread[[=id]]').load('Read.xxm[[?'x',1,'id',id]]',function(){$('.u').removeClass('u');$('.nc').remove();});return false;">mark as read</a></span>>
         end;
      <</p>
      <p class="objectlist">>
      //TODO: extra queries with all tokens/references?
      while qr.Read and Context.Connected do
       begin
        Context.Include('dObjLinkList.xxmi',[],[qr]);
        ]]<br />
        [[
       end;
      <</p>>
     end;
  finally
    qr.Free;
  end;

  qr1:=TQueryResult.Create(Session.DbCon,
    'SELECT Tok.id, Tok.obj_id, Tok.toktype_id, Tok.'+sqlDesc+', Tok.weight, Tok.c_uid, Tok.c_ts, Tok.m_uid, Tok.m_ts, TokType.icon, TokType.name, TokType.system '+
    'FROM Tok  '+
    'INNER JOIN TokType ON TokType.id=Tok.toktype_id '+
    'WHERE Tok.obj_id=? ORDER BY Tok.weight, Tok.c_ts',
    [id]);
  try
    if not(qr1.EOF) then
     begin
      hi:=Context['htok'].AsInteger;
      <<p class="objectlisthead">[[#lblTokens]] tokens</p>>
      while qr1.Read and Context.Connected do
       begin
        qid:=qr1.GetInt('id');
        if hi=qid then begin <<div class="highlighteditem">> end;
        <<p class="objecttitle"><a name="tok[[=qid]]"></a>>
        s:=qr1.GetStr('system');
        if (s<>'') and (s[1]=':') then
         begin
          <<a href="Log.xxm?filter=tt[[,toktype_id]]*" title="[[,name]]" rel="nofollow"><img src="img/cat_[[=Copy(s,2,Length(s)-1)]].png" width="54" height="16" alt="[[,name]]" [[#globalIconAlign]]/></a>>
         end
        else
         begin
          ]][[#txImg(qr1['icon'],qr1['name'])]] [[,name]][[
         end;
        <</p>
        [[#TermStore.TermLinks(itTok,qid,d,qr1.GetStr('desc'))]]
        <p>>
        Context.Include('d_cmw.xxmi',[],[qr1]);
        if InControl then
         begin
          ]]
          <a href="fTok.xxm?tid=[[,id]]" class="linkbutton" rel="nofollow">edit</a>
          |
          <a href="fDelete.xxm?x=t[[,id]]" class="linkbutton" rel="nofollow">delete</a>
          [[
         end;
        <</p>>
        if hi=qid then begin <</div>> end;
       end;
     end;
  finally
    qr1.Free;
  end;
  qr1:=TQueryResult.Create(Session.DbCon,
    'SELECT Ref.id, Ref.obj1_id, Ref.reftype_id, Ref.obj2_id, Ref.'+sqlDesc+', Ref.weight, Ref.c_uid, Ref.c_ts, Ref.m_uid, Ref.m_ts,'+
    ' RefType.icon, RefType.name AS typename, Obj.name, ObjType.icon AS objicon, ObjType.name AS objtypename,'+
    ' ObjTokRefCache.tokHTML, ObjTokRefCache.refHTML '+
    'FROM Ref '+
    'INNER JOIN RefType ON RefType.id=Ref.reftype_id '+
    'INNER JOIN Obj ON Obj.id=Ref.obj2_id '+
    'INNER JOIN ObjType ON ObjType.id=Obj.objtype_id '+
    'LEFT OUTER JOIN ObjTokRefCache ON ObjTokRefCache.id=Obj.id '+
    'WHERE Ref.obj1_id=? AND Obj.rlm_id'+Session.Realms[rpAny].SQL+' ORDER BY Ref.weight, Obj.weight',
    [id]);
  try
    if not(qr1.EOF) then
     begin
      hi:=Context['href'].AsInteger;
      <<p class="objectlisthead">[[#lblReferences]] references</p>>
      while qr1.Read and Context.Connected do
       begin
        qid:=qr1.GetInt('id');
        if hi=qid then begin <<div class="highlighteditem">> end;
        <<p class="objecttitle"><a name="ref[[=qid]]"></a>[[#txImg(qr1['icon'])]] [[,typename]]
        <a href="Item.xxm?x=i[[,obj2_id]]" title="[[,objtypename]]">
        [[#txImg(qr1['objicon'])]]
        [[,name]]</a>>
        Context.Include('dObjTokRef.xxmi',[qr1.GetInt('obj2_id'),'&nbsp;','&nbsp;'],[qr1]);
        <</p>>#TermStore.TermLinks(itRef,qid,d,qr1.GetStr('desc'))<<p>>
        //TODO: show obj2's toks, refs?
        Context.Include('d_cmw.xxmi',[],[qr1]);
        if InControl then
         begin
          ]]
          <a href="fRef.xxm?rid=[[,id]]" class="linkbutton" rel="nofollow">edit</a>
          |
          <a href="fDelete.xxm?x=r[[,id]]" class="linkbutton" rel="nofollow">delete</a>
          [[
         end;
        <</p>>
        if hi=qid then begin <</div>> end;
       end;
     end;
  finally
    qr1.Free;
  end;

i:=DBSingleValue('SELECT COUNT(*) FROM Ref INNER JOIN Obj ON Obj.id=Ref.obj1_id WHERE Ref.obj2_id=? AND Obj.rlm_id'+Session.Realms[rpAny].SQL,[id],0);
if i<>0 then
 begin
  <<span id="backreferences"><p class="midnav">references to object: [[#i]]
  <script><!--
  function LoadBackReferences(e) { $("#backreferences").load("iBackRefs.xxm?id=[[#id]][[#txCallProtect]]"); return(e||window.event||this).shiftKey;}
  //--></script>
  [[
  if ShowControls then
   begin
    ]]
    <a href="Filter.xxm?filter=rx[[#id]]" onclick="return LoadBackReferences(event);" class="linkbutton" rel="nofollow">view...</a>
    <a href="Filter.xxm?filter=rx[[#id]]" class="linkbutton" rel="nofollow">filter...</a>
    <a href="FilterBuild.xxm?x=rx&amp;id=[[#id]]" class="linkbutton" rel="nofollow">build...</a>
    <a href="FrameTrace.xxm?id=[[#id]]" class="linkbutton" target="TreeFrame" rel="nofollow">trace...</a>
    [[
   end
  else
   begin
    ]]
    <a href="Filter.xxm?filter=rx[[#id]]" class="linkbutton" rel="nofollow">filter...</a>
    <a href="FilterBuild.xxm?x=rx&amp;id=[[#id]]" class="linkbutton" rel="nofollow">build...</a>
    [[
   end;
  <</p></span>>
 end;

qr:=TQueryResult.Create(Session.DbCon,
  'SELECT Flt.id, Flt.name, Flt.'+sqlDesc+', Flt.expression, Flt.c_uid, Flt.c_ts, Flt.m_uid, Flt.m_ts '+
  'FROM Flt WHERE Flt.obj_id=? ORDER BY Flt.c_ts',[id]);
try
  if not qr.EOF then Context.SendHTML('<p class="midnav">filters</p>');
  while qr.Read and Context.Connected do Context.Include('dFilter.xxmi',[InControl],[qr]);
finally
  qr.Free;
end;
