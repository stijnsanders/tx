[[@txDefs,DataLank,txSession,txFilter,txFilterSql,]][[!var
i,id,rid,obj2id,oldRefTypeID,newRefTypeID,oldWeight,newWeight1,newWeight,RlmID:integer;
url:string;
desc:WideString;
filter:string;
fs:UTF8String;
f:TtxFilter;
fq:TtxSqlQueryFragments;
qr:TQueryResult;
ids:TIdList;
]][[

//TODO: transaction?

id:=Context['id'].AsInteger;
rid:=Context['rid'].AsInteger;
obj2id:=Context['obj2'].AsInteger;
newRefTypeID:=Context['reftype'].AsInteger;
newWeight1:=Context['weight'].AsInteger;
desc:=Context['desc'].Value;
filter:=Context['filter'].Value;
CheckFormProtect(Context);

ids:=TIdList.Create;
try
  if (filter='') then ids.Add(id) else
   begin
    f:=TtxFilter.Create;
    fq:=TtxSqlQueryFragments.Create(itObj);
    try
      fq.Fields:='Obj.id';
      f.FilterExpression:=UTF8Encode(filter);
      if f.ParseError<>'' then begin<<p style="color:red;">>=f.ParseError<</p>>end;
      fq.AddFilter(f);
      fq.Where:='Obj.rlm_id'+Session.Realms[rpView].SQL+' AND ('+fq.Where+')';
      fs:=fq.SQL;
    finally
      f.Free;
      fq.Free;
    end;

    qr:=TQueryResult.Create(Session.DbCon,fs,[]);
    try
      while qr.Read and Context.Connected do ids.Add(qr.GetInt('id'));
    finally
      qr.Free;
    end;

   end;

  for i:=0 to ids.Count-1 do
   begin
    id:=ids[i];
    if filter<>'' then rid:=0;

    //check realm
    if rid=0 then
     begin
      RlmID:=DBSingleValue('SELECT rlm_id FROM Obj WHERE id=?',[id],DefaultRlmID);
      oldRefTypeID:=0;
      oldWeight:=0;
     end
    else
     begin
      qr:=TQueryResult.Create(Session.DbCon,'SELECT Obj.rlm_id, Ref.reftype_id, Ref.weight FROM Ref INNER JOIN Obj ON Obj.id=Ref.obj1_id WHERE Ref.id=?',[rid]);
      try
        if qr.Read then
         begin
          RlmID:=qr.GetInt('rlm_id');
          oldRefTypeID:=qr.GetInt('reftype_id');
          oldWeight:=qr.GetInt('weight');
         end
        else
         begin
          RlmID:=DefaultRlmID;//?
          oldRefTypeID:=0;
          oldWeight:=0;
         end;
      finally
        qr.Free;
      end;
     end;
    Session.HasRealmPermission(id,RlmID,rpEdit);

    //realm on obj2 also?

    //TODO: 'default': ???

    newWeight:=newWeight1;
    if (rid<>0) and (newRefTypeID<>oldRefTypeID) then
      newWeight:=newWeight-DBSingleValue('SELECT weight FROM RefType WHERE id=?',[oldRefTypeID],0);
    if (rid=0) or (newRefTypeID<>oldRefTypeID) then
      newWeight:=newWeight+DBSingleValue('SELECT weight FROM RefType WHERE id=?',[newRefTypeID],0);

    Session.DbCon.BeginTrans;
    try

        if rid=0 then
          rid:=Session.DbCon.Insert('Ref',
            ['obj1_id',id
            ,'obj2_id',obj2id
            ,'reftype_id',newRefTypeID
            ,sqlDesc,desc
            ,'weight',newWeight
            ,'c_ts',VNow
            ,'c_uid',Session.UserID
            ,'m_ts',VNow
            ,'m_uid',Session.UserID
            ],'id')
        else
          //move references not supported
          Session.DbCon.Update('Ref',
            ['id',rid
            ,'obj2_id',obj2id
            ,'reftype_id',newRefTypeID
            ,sqlDesc,desc
            ,'weight',newWeight
            ,'m_ts',VNow
            ,'m_uid',Session.UserID
            ]);

        if newWeight<>oldWeight then Session.DbCon.Execute('UPDATE Obj SET weight=weight+(?) WHERE id=?',[newWeight-oldWeight,id]);

        //report
        Session.DbCon.Insert('Rpt',
          ['obj_id',id
          ,'ts',VNow
          ,'uid',Session.UserID
          ,sqlDesc,desc
          ,'weight',newWeight
          ,'reftype_id',newRefTypeID
          ,'obj2_id',obj2id
          ]);

        TermStore.StoreTerms(itRef,rid,id,desc);
        if Use_ObjTokRefCache then Context.Include('aObjTokRefCache.xxmi',[id]);

        if Use_Unread and not Session.Stealth then
          Session.DbCon.Insert('Obx',['obj_id',id]);

        Session.DbCon.CommitTrans;
    except
        Session.DbCon.RollbackTrans;
        raise;
    end;

   end;
  if filter='' then
    case Context['x'].AsInteger of
      0:url:='Item.xxm?x=i'+IntToStr(id);
      1:url:='fTok.xxm?id='+IntToStr(id);
      2:url:='fRef.xxm?id='+IntToStr(id);
    end
  else
    url:='Modify.xxm?x=99&filter='+string(URLEncode(filter))+'&c='+IntToStr(ids.Count);
finally
  ids.Free;
end;
Session.AddFilterRecent(itObj,obj2id);
Session.AddFilterRecent(itRefType,newRefTypeID);
Session.AddRecentReference(newRefTypeID,obj2id);
Session.UpdateID:=id;

Context.Redirect(url,true);
<<a href="[[=url]]">>=url<</a>
