[[@txDefs,txSession,DataLank,]][[!var
  qr:TQueryResult;
  ItemType:TtxItemType;
  ItemID,id,qtype,d,d1:integer;
  n,name,name2,level,x1:string;

function ShortID(x:integer):string;
const Code80:array[0..31] of char='ABCDEFGHJKLMNPRSTUVWXYZ123456789';
begin
  Result:='';//'.';
  while not(x=0) do
   begin
    Result:=Code80[x mod 32]+Result;
    x:=x div 32;
   end;
end;

const
  qtypeMax=5;

]][[

{
ATTENTION!!!
Calls over XMLHTTP start a new session,
if needed, rig xxmp to get the session from a SessionID request parameter, in favour of the Context.SessionID
}

CheckCallProtect(Context);
name:=Context['name'].Value;
d1:=Context['d'].AsInteger;
n:=Context['n'].Value;
txItem(Context['x'].Value,ItemType,ItemID);
qtype:=Context['q'].AsInteger;
level:=Context['l'].Value;

if (qtype=0) and (ItemID=0)  and (n='') then qtype:=2;//root? show children

case qtype of
  0,1:
   begin
    if n='' then
     begin
      level:=level+txItemTypeKey[ItemType]+ShortID(ItemID*qtypeMax+qtype);
      name2:=name+'X'+level;
      case ItemType of
        itObj:
         begin

          //item info
          if qtype=1 then
           begin
            qr:=TQueryResult.Create(Session.DbCon,'SELECT ObjType.icon, Obj.name FROM Obj INNER JOIN ObjType ON ObjType.id=Obj.objtype_id WHERE Obj.id=?',[ItemID]);
            try
              if Context.Connected and qr.Read then
               begin
                id:=ItemID;//qr.GetInt('id');
                ]]
                <span id="[[=name2]]_node_[[=id]]">
                <img src="img_trx.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]/>
                <a id="[[=name2]]_nodelink_[[=id]]" href="Item.xxm?x=i[[=id]]" onclick="treenode_select(event,'[[=name2]]','x','i[[=id]]');return(event||window.event||this).ctrlKey;" title="i[[=id]]">
                [[#txImg(qr.GetInt('icon'))]] [[.name]]
                </a><br /></span>
                [[
               end;
            finally
              qr.Free;
            end;
           end;
          //children
          name2:=name+'I'+level;
          qr:=TQueryResult.Create(Session.DbCon,'SELECT id FROM Obj WHERE pid=? AND rlm_id'+Session.Realms[rpView].SQL+' LIMIT 1',[ItemID]);
          try
            id:=ItemID;
            if qr.Read then
             begin
              ]]
              <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;x=i[[=ItemID]]&amp;d=[[=d1]]&amp;q=2&amp;l=[[=level]][[=txCallProtect]]">
              <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
              [[#lblDescendants]]
              <br /></span>
              [[
             end;
          finally
            qr.Free;
          end;
          //terms for object
          name2:=name+'T'+level;
          qr:=TQueryResult.Create(Session.DbCon,'SELECT Trm.id, Trm.domain_id, Trm.term FROM Trm WHERE Trm.obj_id=? ORDER BY Trm.term',[ItemID]);
          try
            while Context.Connected and qr.Read do
             begin
              id:=qr.GetInt('id');
              n:=qr.GetStr('term');
              d:=qr.GetInt('domain_id');
              ]]
              <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;n=[[=n]]&amp;d=[[=d]]&amp;q=0&amp;l=[[=level]][[=txCallProtect]]" class="backwards">
              <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
              <a id="[[=name2]]_nodelink_[[=id]]" href="Term.xxm?n=[[=n]]&amp;d=[[=d]]" onclick="treenode_select(event,'[[=name2]]','n','[[=n]]');return(event||window.event||this).ctrlKey;">
              [[=n]]</a>
              [[if not(d=d1) then begin <<span style="color:red;">*</span>> end;]]
              <br /></span>
              [[
             end;
          finally
            qr.Free;
          end;
          //TODO: obj's tokens, refs, reports?
         end;
        //TODO: other ItemType's
        else
         begin
          <<b>>=txItemTypeName[ItemType]<</b><br/>>
         end;
      end;
      //links
      name2:=name+'L'+level;
      qr:=TQueryResult.Create(Session.DbCon,'SELECT Trl.id, Trl.term, Trl.domain_id FROM Trl WHERE Trl.source=?',[txItemTypeKey[ItemType]+IntToStr(ItemID)]);
      try
        while Context.Connected and qr.Read do
         begin
          id:=qr.GetInt('id');
          d:=qr.GetInt('domain_id');
          n:=qr.GetStr('term');
          ]]
          <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;n=[[=n]]&amp;d=[[=d]]&amp;q=0&amp;l=[[=level]][[=txCallProtect]]">
          <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
          <a id="[[=name2]]_nodelink_[[=id]]" href="Term.xxm?n=[[=n]]" onclick="treenode_select(event,'[[=name2]]','n','[[=n]]');return(event||window.event||this).ctrlKey;">
          <b>>=n<</b>
          </a>
          [[if not(d=d1) then begin <<span style="color:red;">*</span>> end;]]
          <br /></span>
          [[
         end;
      finally
        qr.Free;
      end;

     end
    else
     begin
      //term objects
      level:=level+n;
      name2:=name+'O'+level;
      qr:=TQueryResult.Create(Session.DbCon,
        'SELECT Trm.domain_id, Trm.term, Trm.id as term_id, Obj.id, Obj.pid, Obj.name, Obj.'+sqlDesc+', Obj.c_uid, Obj.c_ts, Obj.m_uid, Obj.m_ts, ObjType.icon, ObjType.name AS typename, ObjTokRefCache.tokHTML, ObjTokRefCache.refHTML '+
        'FROM Trm '+
        'LEFT JOIN Obj ON Obj.id=Trm.obj_id '+
        'LEFT JOIN ObjType ON ObjType.id=Obj.objtype_id '+
        'LEFT OUTER JOIN ObjTokRefCache ON ObjTokRefCache.id=Obj.id '+
        'WHERE lower(Trm.term)=lower(?) '+
        'ORDER BY Obj.weight, Obj.name, Obj.c_ts',[n]);
      try
        while Context.Connected and qr.Read do
         begin
          id:=qr.GetInt('id');
          d:=qr.GetInt('domain_id');
          ]]
          <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;x=i[[=id]]&amp;d=[[=d]]&amp;q=0&amp;l=[[=level]][[=txCallProtect]]">
          <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
          <a id="[[=name2]]_nodelink_[[=id]]" href="Item.xxm?x=i[[=id]]" onclick="treenode_select(event,'[[=name2]]','x','i[[=id]]');return(event||window.event||this).ctrlKey;" title="i[[=id]]">
          [[#txImg(qr.GetInt('icon'))]] [[.name]]
          </a>
          [[if not(d=d1) then begin <<span style="color:red;">*</span>> end;]]
          <br /></span>
          [[
         end;
      finally
        qr.Free;
      end;
      //term links
      name2:=name+'B'+level;
      qr:=TQueryResult.Create(Session.DbCon,'SELECT Trl.id, Trl.source, Trl.domain_id FROM Trl WHERE lower(Trl.term)=lower(?)',[n]);
      try
        while Context.Connected and qr.Read do
         begin
          id:=qr.GetInt('id');
          d:=qr.GetInt('domain_id');
          x1:=qr.GetStr('source');
          ]]
          <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;x=[[=x1]]&amp;d=[[=d]]&amp;q=1&amp;l=[[=level]][[=txCallProtect]]" class="backwards">
          <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
          <a id="[[=name2]]_nodelink_[[=id]]" href="Item.xxm?x=[[=x1]]" onclick="treenode_select(event,'[[=name2]]','x','[[=x1]]');return(event||window.event||this).ctrlKey;">
          [[=x1]]
          </a>
          [[if not(d=d1) then begin <<span style="color:red;">*</span>> end;]]
          <br /></span>
          [[
         end;
      finally
        qr.Free;
      end;
     end;
   end;
  2://children
   begin
    level:=level+txItemTypeKey[ItemType]+ShortID(ItemID*qtypeMax+qtype);
    name2:=name+'C'+level;
    case ItemType of
      itObj:
       begin
        //list children
        qr:=TQueryResult.Create(Session.DbCon,'SELECT Obj.id, ObjType.icon, Obj.name FROM Obj INNER JOIN ObjType ON ObjType.id=Obj.objtype_id WHERE Obj.pid=? AND Obj.rlm_id'+Session.Realms[rpView].SQL+' ORDER BY Obj.weight, Obj.name, Obj.c_ts',[ItemID]);
        try
          while Context.Connected and qr.Read do
           begin
            id:=qr.GetInt('id');
            ]]
            <span id="[[=name2]]_node_[[=id]]" expandurl="iTraceTerm.xxm?name=[[=name]]&amp;x=i[[=id]]&amp;d=[[=d1]]&amp;q=0&amp;l=[[=level]][[=txCallProtect]]">
            <img src="img_tr1.[[#globalImgExt]]" width="16" height="16" alt="" [[#globalIconAlign]]onclick="treenode_toggle('[[=name2]]_node_[[=id]]');" />
            <a id="[[=name2]]_nodelink_[[=id]]" href="Item.xxm?x=i[[=id]]" onclick="treenode_select(event,'[[=name2]]','x','i[[=id]]');return(event||window.event||this).ctrlKey;" title="i[[=id]]">
            [[#txImg(qr.GetInt('icon'))]] [[.name]]
            </a><br /></span>
            [[
           end;
        finally
          qr.Free;
        end;
       end;
      //TODO: other itemtypes
      else
       begin
        <<b>>=txItemTypeName[ItemType]<</b><br />>
       end;
    end;
   end;

  else
   begin
    <<b>Unknown qtype [[=qtype]]</b>>
   end;
end;
